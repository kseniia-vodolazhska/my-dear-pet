// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MyDearPet.Data.EF;
using MyDearPet.Data.EF.Models;
using MyDearPet.Data.EF.Models.Enums;
using System;

namespace MyDearPet.Data.EF.Migrations
{
    [DbContext(typeof(DearDbContext))]
    partial class DearDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PetId");

                    b.Property<int?>("ShelterId");

                    b.Property<int>("Type");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2083);

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("MessageDate");

                    b.Property<int>("RecepientId");

                    b.Property<int>("SenderId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("RecepientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CuratorId");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<int>("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("ShelterId");

                    b.HasKey("Id");

                    b.HasIndex("CuratorId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.RoleArea", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("AreaId");

                    b.HasKey("RoleId", "AreaId");

                    b.ToTable("RoleAreas");
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("LocationId");

                    b.Property<int>("OwnerId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("ProfilePictureUrl");

                    b.Property<int>("RoleId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Media", b =>
                {
                    b.HasOne("MyDearPet.Data.EF.Models.Pet")
                        .WithMany("Media")
                        .HasForeignKey("PetId");

                    b.HasOne("MyDearPet.Data.EF.Models.Shelter")
                        .WithMany("Media")
                        .HasForeignKey("ShelterId");
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Message", b =>
                {
                    b.HasOne("MyDearPet.Data.EF.Models.User", "Recepient")
                        .WithMany()
                        .HasForeignKey("RecepientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyDearPet.Data.EF.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Pet", b =>
                {
                    b.HasOne("MyDearPet.Data.EF.Models.User", "Curator")
                        .WithMany()
                        .HasForeignKey("CuratorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyDearPet.Data.EF.Models.Shelter", "Shelter")
                        .WithMany()
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyDearPet.Data.EF.Models.Shelter", b =>
                {
                    b.HasOne("MyDearPet.Data.EF.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("MyDearPet.Data.EF.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
